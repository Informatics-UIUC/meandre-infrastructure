1.2vcli Panellet:

* Created and tested the class JythonExecutableComponentAdapter
	- This class acts as an adapter
	- The adapter translate the ExcecutableComponent interface into it Jython counter part
	- The ComponentContext instance is accessible thanks to the Jython bindings 
	- The Jython bindings turn getters/setters into pythonic assignable instance variables
	
* Created the new package subtree org.meandre.core.environments
	- This package is intended to group all non-java executable components
	- The package org.meandre.core.environments.python contains Python related environments
	- The package org.meandre.core.environments.python.jython contains the adapter to run Jython flavored executable components
	
* Modified the Conductor to allow embedding:
	- When preparing the URL class loader
	- If context is a resource pass the URI to the class loader
	- If context is a literal the content is dumped to /run/java with an encode name ending in .jar
	- Conductor implements a cache of the already dumped flows to boost up the preparation time
	
* Modified the Repository beans to deal with RDFNodes
	- Old URI formats to contexts (jars) are expressed as Resources (external contexts)
	- Embeddable contexts (jars) are expressed as Literals
	- RDFNode homogenizes the use of contexts (external or embedded)
	
* (!!) Patched JENA to allow proper embedding:
	- Added case Text.CLOB to line 2238 in file DriverRDB.java to allow large literals in Derby
	- Hacked the derby.sql definition and replace the tail of the literal table to CLOB to allow long literals
	
* The add service modified:
	- jar parameter renamed as context
	- Added the embed check button for contexts
	
* Rework the repository implementation metadata processing
	- Moved from SPARQL prototypes to the equivalent procedural version using JENA API
	- Also used the indexer straight will manual filtering to boost search performance
	- Performance of the repository interaction hugely improved.
	- Remove the SPARQL injection problem on the full text search

* Modified the loggers to work on a rotating scheme 
	- ./log dir destination of the loggers
	
* Added org.meandre.core.utils.vocabulary to contain all metadata relate vocabulary.
	- Add the repository one and patched the RepositoryImpl, ComponentDescriptionImpl, and FlowDescriptionImpl
	
* Moved the WSCoreBootstrapper from org.meandre in the src-kernel tree to org.meandre.webservices in the src-ws tree

* Main log file splitted:
	- The kernel logging goes to meandre-kerne.log file
	- The demo logging goes to meandre-demo.log file
	- The WS logging goes to meandre-webservices.log file

* WSCoreBootstrapper got moved to org.meandre.webservices.

* Source refactoring. Will broke:
	- ant
	- nbproject

------------------------------------------------------------------------------

1.1vcli Carquinyoli:

* Meandre Core Web Service Execution Engine, Repository, etc.

------------------------------------------------------------------------------

1.0vcli Farina:

* Plain all mixed together (engine, web app demo, and basic publishing sercvice)

___
Edited by Xavier.

